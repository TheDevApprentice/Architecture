flowchart TB
  %% === Entry (Top) ===
  A["Clients<br/>(Browser, API clients)"]:::client -->|HTTP/WS| T("Traefik<br/>:80/:443"):::proxy

  %% === Proxy network (public HTTP/WS) ===
  subgraph NET_PROXY[network: proxy]
    direction TB
    T -->|HTTP/WS routing| S1(Server #1):::app
    T -->|HTTP/WS routing| S2(Server #2):::app
  end

  %% Place Cache and Storage to the right to minimize crossings
  subgraph NET_CACHE[network: cachenet]
    direction TB
    R["Redis<br/>:6379"]:::cache
  end

  subgraph NET_STOR[network: stornet]
    direction TB
    M["MinIO<br/>S3 API :9000<br/>Console :9001"]:::storage
  end

  %% === DB network (Bottom) ===
  subgraph NET_DB[network: dbnet]
    direction TB
    PX("ProxySQL<br/>Frontend :6033<br/>Admin :6032"):::sqlproxy

    %% Galera stacked vertically (top of DB zone)
    subgraph GALERA[MariaDB Galera Cluster]
      direction TB
      G1["mariadb_galera1<br/>(wsrep node #1)"]:::db
      G2["mariadb_galera2<br/>(wsrep node #2)"]:::db
      G3["mariadb_galera3<br/>(wsrep node #3)"]:::db
    end

    %% MaxScale directly below Galera
    MX["MaxScale Binlog Server<br/>binlogrouter :3306"]:::router

    %% Backup directly below MaxScale
    BK["mariadb-backup (async replica)<br/>chat_backup<br/>Host: 127.0.0.1:3317"]:::backup

    %% ProxySQL <-> Galera
    PX <--> |monitor + routing| G1
    PX <--> |monitor + routing| G2
    PX <--> |monitor + routing| G3

    %% MaxScale consumes binlogs from the current writer (force MX below Galera)
    G1 -->|writer feed| MX
    G2 -->|writer feed| MX
    G3 -->|writer feed| MX

    %% Backup replica streams from MaxScale (force BK below MX)
    MX -->|binlog stream| BK
  end

  %% === App servers wiring (vertical down to DB) ===
  %% Join MySQL traffic from both app servers into a single line to ProxySQL
  J(( )):::sqlproxy
  S1 --> J
  S2 --> J
  J -->|MySQL| PX
  S1 -->|pub/sub + sessions| R
  S2 -->|pub/sub + sessions| R
  S1 -.->|S3 SDK| M
  S2 -.->|S3 SDK| M

  %% TURN (media relay)
  U["TURN (coturn)<br/>:3478 (UDP/TCP)"]:::turn

  %% Access points
  A -->|optional Admin| PX:::admin
  A -->|optional MinIO Console| M:::admin

  %% === Styles ===
  classDef admin fill:#fff5cc,stroke:#e0c200,color:#333;
  classDef proxy fill:#e8f0ff,stroke:#3b71fe,color:#0f2e6b;
  classDef app fill:#e8fff3,stroke:#0f9d58,color:#0a3d27;
  classDef cache fill:#fff0e6,stroke:#ff6d00,color:#5a2a00;
  classDef storage fill:#fff9e6,stroke:#e0c200,color:#5c4b00;
  classDef db fill:#f3e8ff,stroke:#8e44ad,color:#3d0a5a;
  classDef router fill:#e6fbff,stroke:#00acc1,color:#004d57;
  classDef sqlproxy fill:#f0f5ff,stroke:#5c6bc0,color:#1a237e;
  classDef backup fill:#ffe6ee,stroke:#d81b60,color:#5a0030;
  classDef turn fill:#e6f7ff,stroke:#00a3ff,color:#003a66;
  classDef client fill:#f5f5f5,stroke:#616161,color:#212121;
