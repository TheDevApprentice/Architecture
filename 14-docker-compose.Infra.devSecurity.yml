name: security

services:
  # Identity Provider - Keycloak (Quarkus)
  keycloak:
    build:
      context: ./server/Keycloak
      dockerfile: Dockerfile
    image: keycloak:dev
    container_name: keycloak
    environment:
      KC_HTTP_ENABLED: "true"
      # Database via ProxySQL on dbnet
      KC_DB: postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_URL: jdbc:postgresql://haproxy:5432/keycloak
      # Admin bootstrap (dev only; move to secrets later)
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      # Reverse proxy awareness
      KC_HOSTNAME: auth.localhost
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: "false"
      # KC_HOSTNAME_PORT: 8080
      KC_METRICS_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      # OpenTelemetry traces -> OTel Collector -> Tempo
      KC_FEATURES: opentelemetry
      KC_OPENTELEMETRY_ENDPOINT: http://otel-collector:4317
      KC_OPENTELEMETRY_PROTOCOL: grpc
      KC_LOG_LEVEL: info
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`auth.localhost`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak.service=keycloak"
      - "traefik.http.routers.keycloak.priority=100"
      - "traefik.docker.network=proxy"
    command: ["start"]
    networks:
      - proxy
      - dbnet
    restart: unless-stopped
    volumes:
      - keycloak_data:/opt/keycloak/data
      
volumes:
  keycloak_data:

networks:
  proxy:
    name: proxy
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/24
  dbnet:
    name: dbnet
    ipam:
      driver: default
      config:
        - subnet: 172.31.10.0/24
  cachenet:
    name: cachenet
    ipam:
      driver: default
      config:
        - subnet: 172.31.20.0/24
  stornet:
    name: stornet
    ipam:
      driver: default
      config:
        - subnet: 172.31.30.0/24